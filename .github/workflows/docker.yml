name: Docker Build and Push

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Compute cache key
      - name: Compute Cache Key
        id: compute-cache-key
        run: echo "CACHE_KEY=${{ runner.os }}-docker-${{ github.sha }}" >> $GITHUB_ENV

      # Step 4: Restore Docker cache
      - name: Restore Docker Cache
        id: cache-docker-layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ env.CACHE_KEY }}
          restore-keys: |
            ${{ runner.os }}-docker-

      # Step 5: Print Cache Status
      - name: Print Cache Status
        run: |
          if [[ "${{ steps.cache-docker-layers.outputs.cache-hit }}" == 'true' ]]; then
            echo "✅ Cache hit! Using cache key: ${{ env.CACHE_KEY }}"
          else
            echo "❌ Cache miss! Layers will be rebuilt."
          fi

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Build and push frontend image with cache
      - name: Build and push frontend image
        uses: docker/build-push-action@v3
        with:
          context: ./chatbot_frontend
          file: ./chatbot_frontend/Dockerfile
          push: true
          tags: ppavansree/frontend:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Step 8: Build and push backend image with cache
      - name: Build and push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./chatbot_backend
          file: ./chatbot_backend/Dockerfile
          push: true
          tags: ppavansree/backend:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Step 9: Save cache after build
      - name: Save Docker Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache || true
